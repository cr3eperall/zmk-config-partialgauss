/*
 * Copyright (c) 2020 Pete Johanson
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/matrix_transform.h>

// #include <layouts/foostan/corne/5column.dtsi>
// #include <layouts/foostan/corne/6column.dtsi>

// &foostan_corne_6col_layout {
//     transform = <&default_transform>;
// };

// &foostan_corne_5col_layout {
//     transform = <&five_column_transform>;
// };

&adc {
    status = "okay";

    #address-cells = <1>;
    #size-cells = <0>;
    // nrf52840/nano_33_ble adc pin assignments:
    // AIN2 = P0.04 (A0 in nano_33_ble)
    // AIN3 = P0.05 (A1 in nano_33_ble)
    // AIN6 = P0.30 (A2 in nano_33_ble)
    // AIN5 = P0.29 (A3 in nano_33_ble)
    // AIN7 = P0.31 (A4 in nano_33_ble)
    // AIN0 = P0.02 (A5 in nano_33_ble)
    // AIN4 = P0.28 (A6 in nano_33_ble)
    // AIN1 = P0.03 (A7 in nano_33_ble)
    channel@3 {
        reg = <3>;
        zephyr,input-positive = <NRF_SAADC_AIN3>;
        zephyr,gain = "ADC_GAIN_2";
        zephyr,reference = "ADC_REF_VDD_1_4";
        zephyr,acquisition-time = <ADC_ACQ_TIME(ADC_ACQ_TIME_MICROSECONDS, 40)>;
        zephyr,resolution = <12>;
    };

    channel@4 {
        reg = <4>;
        zephyr,input-positive = <NRF_SAADC_AIN4>;
        zephyr,gain = "ADC_GAIN_2";
        zephyr,reference = "ADC_REF_VDD_1_4";
        zephyr,acquisition-time = <ADC_ACQ_TIME(ADC_ACQ_TIME_MICROSECONDS, 40)>;
        zephyr,resolution = <12>;
    };
};

/ {
    chosen {
        // zephyr,display = &oled;
        zmk,kscan = &kscan1;
        zmk,physical-layout = &physical_layout0;
    };
    
    physical_layout0: physical_layout_0 { // First physical layout, use different naming for other layouts
        compatible = "zmk,physical-layout";
        display-name = "Default Layout";
        kscan = <&kscan1>; // Label of the kscan node, optional if all layouts use the same
        transform = <&default_transform>; // Label of the matrix transform for this layout
    };

    default_transform: keymap_transform_0 {
        compatible = "zmk,matrix-transform";
        columns = <12>;
        rows = <4>;
// | SW1  | SW2  | SW3  | SW4  | SW5  | SW6  |   | SW6  | SW5  | SW4  | SW3  | SW2  | SW1  |
// | SW7  | SW8  | SW9  | SW10 | SW11 | SW12 |   | SW12 | SW11 | SW10 | SW9  | SW8  | SW7  |
// | SW13 | SW14 | SW15 | SW16 | SW17 | SW18 |   | SW18 | SW17 | SW16 | SW15 | SW14 | SW13 |
//                      | SW19 | SW20 | SW21 |   | SW21 | SW20 | SW19 |
        map = <
RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5)  RC(0,6) RC(0,7) RC(0,8) RC(0,9) RC(0,10) RC(0,11)
RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5)  RC(1,6) RC(1,7) RC(1,8) RC(1,9) RC(1,10) RC(1,11)
RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5)  RC(2,6) RC(2,7) RC(2,8) RC(2,9) RC(2,10) RC(2,11)
                        RC(3,3) RC(3,4) RC(3,5)  RC(3,6) RC(3,7) RC(3,8)
        >;
    };

    five_column_transform: keymap_transform_1 {
        compatible = "zmk,matrix-transform";
        columns = <10>;
        rows = <4>;
// | SW2  | SW3  | SW4  | SW5  | SW6  |   | SW6  | SW5  | SW4  | SW3  | SW2  |
// | SW8  | SW9  | SW10 | SW11 | SW12 |   | SW12 | SW11 | SW10 | SW9  | SW8  |
// | SW14 | SW15 | SW16 | SW17 | SW18 |   | SW18 | SW17 | SW16 | SW15 | SW14 |
//               | SW19 | SW20 | SW21 |   | SW21 | SW20 | SW19 |
        map = <
RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5)  RC(0,6) RC(0,7) RC(0,8) RC(0,9) RC(0,10)
RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5)  RC(1,6) RC(1,7) RC(1,8) RC(1,9) RC(1,10)
RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5)  RC(2,6) RC(2,7) RC(2,8) RC(2,9) RC(2,10)
                        RC(3,3) RC(3,4) RC(3,5)  RC(3,6) RC(3,7) RC(3,8)
        >;
    };

    kscan0: kscan {
        compatible = "zmk,kscan-gpio-matrix";
        wakeup-source;

        diode-direction = "col2row";
        row-gpios
            = <&nano_33_ble 2 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&nano_33_ble 3 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&nano_33_ble 4 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&nano_33_ble 5 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            ;

    };

    kscan1: kscan1{
        compatible = "zmk,kscan-adc-direct";
        resolution = <12>;
        pulse-read;
        wait-period-idle= <5>;
        wait-period-press= <1>;
        
        top {
            enable-gpios= <&nano_33_ble 11 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>;
            switch-pressed-is-higher;
            switch-height = <3300>;
            first {
                io-channels = <&adc 3>;
                press-point = <200>;
                release-point = <100>;
                calibration-min = <0>;
                calibration-max = <4095>;
            };
            second {
                io-channels = <&adc 4>;
                press-point = <200>;
                release-point = <100>;
                calibration-min = <0>;
                calibration-max = <4095>;
            };
        };
    };

    // TODO: per-key RGB node(s)?
};

// &nano_33_ble_i2c {
//     status = "okay";

//     oled: ssd1306@3c {
//         compatible = "solomon,ssd1306fb";
//         reg = <0x3c>;
//         width = <128>;
//         height = <32>;
//         segment-offset = <0>;
//         page-offset = <0>;
//         display-offset = <0>;
//         multiplex-ratio = <31>;
//         segment-remap;
//         com-invdir;
//         com-sequential;
//         inversion-on;
//         prechargep = <0x22>;
//     };
// };